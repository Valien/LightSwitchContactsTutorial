

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Address : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Address entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Address(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Address.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AddressType
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AddressType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address1);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address2);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string City
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void City_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string State
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void State_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ZIP
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIP);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIP, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIP_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIP_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ZIP_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Contact Contact
        {
            get
            {
                return global::LightSwitchApplication.Address.DetailsClass.GetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact);
            }
            set
            {
                global::LightSwitchApplication.Address.DetailsClass.SetValue(this, global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Contact_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Address,
                global::LightSwitchApplication.Address.DetailsClass,
                global::LightSwitchApplication.Address.DetailsClass.IImplementation,
                global::LightSwitchApplication.Address.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry
                __AddressEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>.Entry(
                    global::LightSwitchApplication.Address.DetailsClass.__Address_CreateNew,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_Created,
                    global::LightSwitchApplication.Address.DetailsClass.__Address_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Address __Address_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Address> es)
            {
                return new global::LightSwitchApplication.Address(es);
            }
            private static void __Address_Created(global::LightSwitchApplication.Address e)
            {
                e.Address_Created();
            }
            private static bool __Address_AllowSaveWithErrors(global::LightSwitchApplication.Address e)
            {
                bool result = false;
                e.Address_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Address.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> AddressType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.AddressType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> City
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.City) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> State
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.State) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> ZIP
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ZIP) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact> Contact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string AddressType { get; set; }
                new string Address1 { get; set; }
                new string Address2 { get; set; }
                new string City { get; set; }
                new string State { get; set; }
                new string ZIP { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Contact { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    AddressType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "AddressType",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._AddressType_OnValueChanged);
                private static void _AddressType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._AddressType, sf);
                }
                private static bool _AddressType_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.AddressType_IsReadOnly(ref result);
                    return result;
                }
                private static void _AddressType_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AddressType_Validate(r);
                }
                private static string _AddressType_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.AddressType;
                }
                private static void _AddressType_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AddressType = v;
                }
                private static void _AddressType_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.AddressType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "Address1",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address1_OnValueChanged);
                private static void _Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1, sf);
                }
                private static bool _Address1_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Validate(r);
                }
                private static string _Address1_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1;
                }
                private static void _Address1_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1 = v;
                }
                private static void _Address1_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "Address2",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Address2_OnValueChanged);
                private static void _Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2, sf);
                }
                private static bool _Address2_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Validate(r);
                }
                private static string _Address2_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2;
                }
                private static void _Address2_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2 = v;
                }
                private static void _Address2_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    City = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "City",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._City_OnValueChanged);
                private static void _City_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._City, sf);
                }
                private static bool _City_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.City_IsReadOnly(ref result);
                    return result;
                }
                private static void _City_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.City_Validate(r);
                }
                private static string _City_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.City;
                }
                private static void _City_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.City = v;
                }
                private static void _City_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.City_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    State = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "State",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._State_OnValueChanged);
                private static void _State_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._State, sf);
                }
                private static bool _State_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.State_IsReadOnly(ref result);
                    return result;
                }
                private static void _State_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.State_Validate(r);
                }
                private static string _State_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.State;
                }
                private static void _State_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.State = v;
                }
                private static void _State_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.State_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    ZIP = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "ZIP",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ZIP_OnValueChanged);
                private static void _ZIP_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ZIP, sf);
                }
                private static bool _ZIP_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ZIP_IsReadOnly(ref result);
                    return result;
                }
                private static void _ZIP_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ZIP_Validate(r);
                }
                private static string _ZIP_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ZIP;
                }
                private static void _ZIP_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ZIP = v;
                }
                private static void _ZIP_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ZIP_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contact = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contact",
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_Stub,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_ComputeIsReadOnly,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_Validate,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_GetCoreImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_GetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_SetImplementationValue,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_Refresh,
                        global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties._Contact_OnValueChanged);
                private static void _Contact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Address.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.Address.DetailsClass d, object sf)
                {
                    c(d, ref d._Contact, sf);
                }
                private static bool _Contact_ComputeIsReadOnly(global::LightSwitchApplication.Address e)
                {
                    bool result = false;
                    e.Contact_IsReadOnly(ref result);
                    return result;
                }
                private static void _Contact_Validate(global::LightSwitchApplication.Address e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Contact_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Contact_GetCoreImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.ImplementationEntity.Contact;
                }
                private static global::LightSwitchApplication.Contact _Contact_GetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact, ref d._Contact);
                }
                private static void _Contact_SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass d, global::LightSwitchApplication.Contact v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact, ref d._Contact, (i, ev) => i.Contact = ev, v);
                }
                private static void _Contact_Refresh(global::LightSwitchApplication.Address.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Address.DetailsClass.PropertySetProperties.Contact, ref d._Contact);
                }
                private static void _Contact_OnValueChanged(global::LightSwitchApplication.Address e)
                {
                    e.Contact_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _AddressType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _City;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _State;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _ZIP;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Address, global::LightSwitchApplication.Address.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contact;
            
        }
    
        #endregion
    }
    
    #endregion
}
